---
- hosts: local

  vars:
    - dropletname: chat
  
  roles:
    - DrMegahertz.cloudflare

  tasks:

  - debug: msg="User name {{ansible_user_id}}"

  - name: ensure ssh key exists
    user: >
      name={{ ansible_user_id }}
      generate_ssh_key=yes
      ssh_key_file=.ssh/id_rsa

  - name: ensure key exists at DigitalOcean
    digital_ocean: >
      state=present
      command=ssh
      name=my_ssh_key
      ssh_pub_key={{ lookup('file', '~/.ssh/chat_id_rsa.pub') }}
    register: my_ssh_key

  - debug: msg="Droplet name {{dropletname}}"

  - name: ensure droplet one exists
    digital_ocean: >
      state=present
      command=droplet
      name={{dropletname}}
      size_id=512mb
      region_id=sgp1
      image_id=coreos-stable
      ssh_key_ids={{ my_ssh_key.ssh_key.id }}
    register: created_droplet

  - debug: msg="Droplet {{ created_droplet }}"

  - debug: msg="IP is {{ created_droplet.droplet.ip_address }}"

  - name: Add DNS record
    cloudflare_domain: >
        state=present
        name=chat
        zone=litleleprikon.me
        type=A
        content={{ created_droplet.droplet.ip_address }}

  - name: Add host to groupname
      add_host: hostname={{ created_droplet.droplet.ip_address }} groupname=new_instances

- hosts: new_instances
  connection: ssh
  sudo: True
  
  tasks:
  - name: New instance configuration
  - debug: msg="IP is {{ inventory_hostname }}"

  tasks:
    - name: determine swarm status
      shell: >
        docker info | egrep '^Swarm: ' | cut -d ' ' -f2
      register: swarm_status

    - name: create swarm_worker_operational group
      add_host:
        hostname: "{{ item }}"
        groups: swarm_worker_operational
      with_items: "{{ new_instances }}"
      when: "'active' in swarm_status.stdout_lines"
      run_once: true

    - name: create swarm_worker_bootstrap group
      add_host:
        hostname: "{{ item }}"
        groups: swarm_worker_bootstrap
      with_items: "{{ play_hosts }}"
      when: "'active' not in swarm_status.stdout_lines"
      run_once: true





