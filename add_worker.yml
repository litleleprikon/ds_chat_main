---
- hosts: local

  vars:
    - dropletname: chat
  
  roles:
    - DrMegahertz.cloudflare

  tasks:

  - debug: msg="User name {{ansible_user_id}}"

  - name: ensure ssh key exists
    user: >
      name={{ ansible_user_id }}
      generate_ssh_key=yes
      ssh_key_file=.ssh/id_rsa

  - name: ensure key exists at DigitalOcean
    digital_ocean: >
      state=present
      command=ssh
      name=my_ssh_key
      ssh_pub_key={{ lookup('file', '~/.ssh/chat_id_rsa.pub') }}
    register: my_ssh_key

  - debug: msg="Droplet name {{dropletname}}"

  - name: ensure droplet one exists
    digital_ocean: >
      state=present
      command=droplet
      name={{dropletname}}
      size_id=512mb
      region_id=sgp1
      image_id=coreos-stable
      ssh_key_ids={{ my_ssh_key.ssh_key.id }}
    register: created_droplet

  - debug: msg="Droplet {{ created_droplet }}"

  - debug: msg="IP is {{ created_droplet.droplet.ip_address }}"

  - name: Add DNS record
    cloudflare_domain: >
        state=present
        name=chat
        zone=litleleprikon.me
        type=A
        content={{ created_droplet.droplet.ip_address }}

  - name: Add host to groupname
      add_host: hostname={{ created_droplet.droplet.ip_address }} groupname=new_instances

- hosts: manager
  - name: retrieve swarm worker token
    shell: docker swarm join-token -q worker
    register: swarm_worker_token

- hosts: new_instances
  connection: ssh
  become_user: core
  become: true
  vars:
    token: "{{ hostvars[groups['swarm_manager_operational'][0]]['swarm_manager_token']['stdout'] }}"
  tasks:
    - name: join manager nodes to cluster
      shell: >
        docker swarm join
        --advertise-addr={{ created_droplet.droplet.ip_address }}:2377
        --token={{ token }}
        {{ groups['swarm_manager_ips'][0] }}:2377





